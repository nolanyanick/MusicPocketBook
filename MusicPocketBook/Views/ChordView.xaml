<UserControl x:Name="ChordWindow" x:Class="MusicPocketBook.Views.ChordView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MusicPocketBook.Views"
             xmlns:viewModels="clr-namespace:MusicPocketBook.ViewModels"
             xmlns:validationRules="clr-namespace:MusicPocketBook.ValidationRules"
             xmlns:local1="http://schemas.microsoft.com/netfx/2009/xaml/presentation"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             Background="White">
    
    <UserControl.Resources>
        <local1:BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <Style x:Key="textBoxStyle" TargetType="TextBox">
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="FontWeight" Value="Thin"/>
            <Setter Property="Foreground" Value="RoyalBlue"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="IsReadOnly" Value="True"/>
        </Style>

        <Style x:Key="subListBoxStyle" TargetType="ListBox">
            <Setter Property="Width" Value="66"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontWeight" Value="Thin"/>
            <Setter Property="Foreground" Value="RoyalBlue"/>
            <Setter Property="Margin" Value="2,2,2,2"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Background" Value="White"/>
        </Style>

        <Style x:Key="subListBoxText" TargetType="TextBox">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="Margin" Value="0,3,0,0"/>
        </Style>

        <ControlTemplate x:Key="ValidationTemplate">
            <DockPanel>
                <AdornedElementPlaceholder/>
                <TextBlock Text="{Binding ErrorContent}" Foreground="Red" Margin="5,0,0,0"></TextBlock>
            </DockPanel>
        </ControlTemplate>

        <ControlTemplate x:Key="nameValidationTemplate">
            <DockPanel>
                <AdornedElementPlaceholder/>
                <TextBlock Text="{Binding ErrorContent}" Foreground="Red" Margin="5,0,0,0"></TextBlock>
            </DockPanel>
        </ControlTemplate>

        <Style x:Key="textBoxError" TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                            Path=(Validation.Errors)/ErrorContent}"
                            />
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--CHORDS GROUPBOX-->
        <GroupBox
            Grid.Row="0"
            Grid.Column="0" 
            Grid.RowSpan="3"
            Header="Chords"
            Margin="4,4,4,4"            
            VerticalAlignment="Top"
            Foreground="RoyalBlue"
            BorderBrush="RoyalBlue"
            Height="350">

            <!--CHORD MAIN PANEL-->
            <StackPanel>
                <Label
                    Grid.Column="0"
                    Grid.Row="0"
                    VerticalAlignment="Top"
                    HorizontalAlignment="Left"
                    Content="Select a Chord:"
                    FontSize="15"
                    FontWeight="Thin"
                    Foreground="RoyalBlue"
                    Margin="0,0,0,0" />

                <!--chord list box-->
                <ListBox 
                    Grid.Column="0"                    
                    Grid.Row="1"
                    Height="295"
                    Margin="0,0,0,0"
                    BorderThickness="0"
                    BorderBrush="RoyalBlue"
                    Background="White"
                    ItemsSource="{Binding ChordsCollection}"
                    SelectedItem="{Binding SelectedChord, Mode=TwoWay}"
                    IsSynchronizedWithCurrentItem="true"
                    ScrollViewer.VerticalScrollBarVisibility="Visible"
                    VerticalAlignment="Top">

                    <!--name of each chord-->                        
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel
                                Orientation="Horizontal">
                                <TextBlock 
                                    Text="{Binding Name}" 
                                    FontSize="25" 
                                    FontWeight="Thin" 
                                    Foreground="RoyalBlue"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>

        </GroupBox>

        <!--CHORDS INFO-->
        <GroupBox
            Grid.Row="0"
            Grid.Column="1" 
            Grid.RowSpan="3"
            Grid.ColumnSpan="2"
            Header="Information"
            Margin="4,4,4,4"            
            VerticalAlignment="Top"
            Foreground="RoyalBlue"
            BorderBrush="RoyalBlue"
            Height="350">
            <StackPanel Orientation="Vertical">

                

                <!--id, name, type, keys, image controls-->
                <StackPanel 
                    VerticalAlignment="Bottom" 
                    HorizontalAlignment="Center"
                    Margin="0,0,0,0"
                    Orientation="Horizontal"
                    Height="250"
                    >

                    <StackPanel Margin="0,34,50,0">
                    <!--ID-->
                    <StackPanel Orientation="Horizontal" Margin="-1,0,0,0">
                        <Label   
                            HorizontalAlignment="Left"
                            Content="Id: "
                            FontSize="15"
                            FontWeight="Thin"
                            Foreground="RoyalBlue"
                            Margin="0,0,0,0"
                            />

                        <TextBox Name="idTextBox" IsReadOnly="{Binding ShowAddButton}" Width="25" Height="20" FontSize="12" Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
                                 Style="{StaticResource textBoxError}">
                            <TextBox.Text>
                                <Binding Path="AddEditChord.Id" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validationRules:KeyIdRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>

                    <!--NAME-->
                    <StackPanel Orientation="Horizontal" Margin="-27,0,0,0">
                        <Label   
                            HorizontalAlignment="Right"
                            Content="Name: "
                            FontSize="15"
                            FontWeight="Thin"
                            Foreground="RoyalBlue"
                            Margin="0,0,0,0"
                            />

                        <TextBox Name="nameTextBox" IsReadOnly="{Binding ShowAddButton}" Width="60" Height="20" FontSize="12" Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
                                 Style="{StaticResource textBoxError}">
                            <TextBox.Text>
                                <Binding Path="AddEditChord.Name" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validationRules:KeyIdRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>

                    <!--TYPE-->
                    <StackPanel Orientation="Horizontal" Margin="-19,0,0,0">
                        <Label   
                            HorizontalAlignment="Left"
                            Content="Type: "
                            FontSize="15"
                            FontWeight="Thin"
                            Foreground="RoyalBlue"
                            Margin="0,0,0,0"/>


                            <!--types list box-->
                            <ListBox 
                            Margin="0,0,0,0"
                            Background="White"
                            Height="75"
                                Width="100"
                            ItemsSource="{Binding AllChordTypes}"
                            SelectedItem="{Binding AddEditChord.ChordType}"
                            IsSynchronizedWithCurrentItem="true"
                            ScrollViewer.VerticalScrollBarVisibility="Visible"
                                 SelectionChanged="ListBox_SelectionChanged"
                            />

                        </StackPanel>

                    <!--KEYS-->
                    <StackPanel Orientation="Horizontal" Margin="-17,6,0,0">
                        <Label   
                            HorizontalAlignment="Left"
                            Content="Keys: "
                            FontSize="15"
                            FontWeight="Thin"
                            Foreground="RoyalBlue"
                            Margin="0,0,0,0"/>

                            <!--keys list box-->
                            <ListBox 
                            Margin="0,0,0,0"
                            BorderThickness=".5"
                            BorderBrush="RoyalBlue"
                            Background="White"
                            Height="75"
                            ItemsSource="{Binding AddEditChord.KeyNames}"
                            IsSynchronizedWithCurrentItem="true"
                            ScrollViewer.VerticalScrollBarVisibility="Visible"
                            SelectedItem="null"
                            >
                            </ListBox>

                            <!--keys to add/edit list box-->
                        <ListBox 
                            Margin="10,0,0,0"
                            BorderThickness=".5"
                            BorderBrush="RoyalBlue"
                            Background="White"
                            Height="75"
                            ItemsSource="{Binding AllKeys}"
                            SelectedItem="{Binding SelectedKey}"
                            IsSynchronizedWithCurrentItem="true"
                            ScrollViewer.VerticalScrollBarVisibility="Visible"
                            Visibility="{Binding ShowSaveButton, Converter={StaticResource BoolToVisibilityConverter}}">

                            <!--name of each key-->
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel
                                        Orientation="Horizontal">
                                        <TextBlock 
                                            Text="{Binding Name}" 
                                            FontSize="15" 
                                            FontWeight="Thin" 
                                            Foreground="RoyalBlue"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </StackPanel>
                    </StackPanel>

                    <!--IMAGE-->
                    <Border Margin="6" BorderBrush="Gray" BorderThickness=".5" Height="160" Visibility="{Binding ShowAddButton, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Image 
                            Source="{Binding AddEditChord.ImageFilePath}" 
                            Stretch="UniformToFill"  
                            Width="150" 
                            Height="150" 
                            Visibility="{Binding ShowAddButton, Converter={StaticResource BoolToVisibilityConverter}}"/>
                    </Border>

                </StackPanel>

                <!--BUTTONS-->
                <StackPanel
                    Margin="0,50,0,0"
                    VerticalAlignment="Bottom"
                    HorizontalAlignment="Center"
                    Orientation="Horizontal"
                    Height="55">

                    <TextBlock>CRUD operations coming soon!</TextBlock>
                    
                    <!--<Button
                        Width="65"
                        Height="25"
                        Margin="0,0,2,2"
                        FontSize="15"
                        FontWeight="Thin"
                        Foreground="White"
                        Background="CornflowerBlue"
                        BorderBrush="White"
                        BorderThickness="1"
                        Content="Add"
                        Command="{Binding Path=DataContext.AddChordCommand, ElementName=ChordWindow}"
                        Visibility="{Binding ShowAddButton, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=nameTextBox}" Value="False"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=idTextBox}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button
                        Width="65"
                        Height="25"
                        Margin="0,0,2,2"
                        FontSize="15"
                        FontWeight="Thin"
                        Foreground="White"
                        Background="CornflowerBlue"
                        BorderBrush="White"
                        BorderThickness="1"
                        Content="Edit"
                        Command="{Binding Path=DataContext.UpdateChordCommand, ElementName=ChordWindow}"
                        Visibility="{Binding ShowAddButton, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=nameTextBox}" Value="False"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=idTextBox}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button
                        Width="65"
                        Height="25"
                        Margin="0,0,2,2"
                        FontSize="15"
                        FontWeight="Thin"
                        Foreground="White"
                        Background="CornflowerBlue"
                        BorderBrush="White"
                        BorderThickness="1"
                        Content="Delete"
                        Command="{Binding Path=DataContext.DeleteChordCommand, ElementName=ChordWindow}"
                        Visibility="{Binding ShowAddButton, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=nameTextBox}" Value="False"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=idTextBox}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <StackPanel Orientation="Horizontal">
                        <Button
                            Width="65"
                            Height="25"
                            Margin="2,0,2,2"
                            VerticalAlignment="Center"                        
                            FontSize="15"
                            FontWeight="Thin"
                            Foreground="White"
                            Background="CornflowerBlue"
                            BorderBrush="White"
                            BorderThickness="1"
                            Content="Save"
                            Command="{Binding Path=DataContext.SaveChordCommand, ElementName=ChordWindow}"
                            Visibility="{Binding ShowSaveButton, Converter={StaticResource BoolToVisibilityConverter}}"
                            >

                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=nameTextBox}" Value="False"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=idTextBox}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button
                            Width="65"
                            Height="25"
                            Margin="2,0,2,2"
                            VerticalAlignment="Center"                        
                            FontSize="15"
                            FontWeight="Thin"
                            Foreground="White"
                            Background="CornflowerBlue"
                            BorderBrush="White"
                            BorderThickness="1"
                            Content="Cancel"
                            Command="{Binding Path=DataContext.CancelChordCommand, ElementName=ChordWindow}"
                            Visibility="{Binding ShowSaveButton, Converter={StaticResource BoolToVisibilityConverter}}"
                            >
                        </Button>
                    </StackPanel>-->





                </StackPanel>



            </StackPanel>
        </GroupBox>


    </Grid>
</UserControl>
